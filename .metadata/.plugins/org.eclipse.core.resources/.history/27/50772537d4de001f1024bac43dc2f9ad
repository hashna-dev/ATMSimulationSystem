package com.ty.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.web.SecurityFilterChain;

import jakarta.websocket.Session;
@Configuration
@EnableWebSecurity
public class SecurityConfig {
	@Bean
	public SecurityFilterChain securityFilterChain(HttpSecurity http, Object sessionCreationPolicy) throws Exception {
		//lambda function
		//disable csrf
		http.csrf(customizer -> customizer.disable());
		//Enable Login Restrictions
		http.authorizeHttpRequests(request ->request.anyRequest().authenticated());
		//Enable Login Page
		http.formLogin(Customizer.withDefaults());
		//To Enable Login in Postman
		http.httpBasic(Customizer.withDefaults());
		//To make stateless (Everytime create new sessionId)
		http.sessionManagement(Session->sessionCreationPolicy(sessionCreationPolicy));
		return http.build();

		}
}
