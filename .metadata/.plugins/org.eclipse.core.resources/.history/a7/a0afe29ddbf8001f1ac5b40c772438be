package com.ty.atm.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ty.atm.model.Account;
import com.ty.atm.repository.AccountRepository;

import java.util.Optional;

@Service
public class ATMService {
    
    @Autowired
    private AccountRepository accountRepository;

    public double checkBalance(Long accountNumber) {
        return accountRepository.findByAccountNumber(accountNumber)
            .map(Account::getBalance)
            .orElseThrow(() -> new RuntimeException("Account with number " + accountNumber + " not found!"));
    }

    public void withdraw(Long accountNumber, double amount) {
        Account account = accountRepository.findByAccountNumber(accountNumber)
            .orElseThrow(() -> new RuntimeException("Account with number " + accountNumber + " not found!"));

        if (account.getBalance() < amount) {
            throw new RuntimeException("Insufficient balance.");
        }

        account.setBalance(account.getBalance() - amount);
        accountRepository.save(account);
    }

    public void deposit(Long accountNumber, double amount) {
        Account account = accountRepository.findByAccountNumber(accountNumber)
            .orElseThrow(() -> new RuntimeException("Account with number " + accountNumber + " not found!"));

        account.setBalance(account.getBalance() + amount);
        accountRepository.save(account);
    }
}
